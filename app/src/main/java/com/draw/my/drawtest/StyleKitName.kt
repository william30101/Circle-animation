package com.draw.my.drawtest


import android.graphics.Color
import android.graphics.Paint
import android.graphics.Path
import android.graphics.RectF








/**
 * Created by AuthorName on Oct 3, 2018.
 * Copyright Â© 2018 CompanyName. All rights reserved.
 *
 * This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
 * http://www.paintcodeapp.com
 *
 * @author AuthorName
 */
class StyleKitName(val myView: MyView) {

    // Resizing Behavior
    enum class ResizingBehavior {
        AspectFit, //!< The content is proportionally resized to fit into the target rectangle.
        AspectFill, //!< The content is proportionally resized to completely fill the target rectangle.
        Stretch, //!< The content is stretched to match the entire target rectangle.
        Center
        //!< The content is centered in the target rectangle, but it is NOT resized.
    }




    companion object {

        class CacheForCanvas1 {
            val paint = Paint()
            val originalFrame = RectF(0f, 0f, 33f, 39f)
            val resizedFrame = RectF()
            val bezierRect = RectF()
            val bezierPath = Path()
        }

        var length = 0f
        var myPath = Path()
        var myPaint = Paint()


        // In Trial version of PaintCode, the code generation is limited to 3 canvases.

        // Canvas Drawings
        // Tab

        fun drawCanvas1() {
            // General Declarations
            val paint = CacheForCanvas1().paint

            // Local Colors
            val fillColor = Color.argb(255, 191, 0, 0)

            // Group 2
            run {
                // Bezier
                val bezierRect = CacheForCanvas1().bezierRect
                bezierRect.set(2.98f, 4.7f, 74.56f, 69.18f)
                val bezierPath = CacheForCanvas1().bezierPath
                bezierPath.reset()
                bezierPath.moveTo(14.05f, 65.18f)
                bezierPath.lineTo(3.98f, 58.26f)
                bezierPath.lineTo(74.56f, 58.26f)
                bezierPath.lineTo(14.05f, 65.18f)
                bezierPath.close()

                bezierPath.moveTo(14.05f, 3.71f)
                bezierPath.lineTo(14.05f, 53.08f)
                bezierPath.lineTo(25.51f, 53.08f)
                bezierPath.lineTo(25.51f, 37.77f)
                bezierPath.lineTo(33.62f, 37.77f)
                bezierPath.lineTo(47.65f, 53.08f)
                bezierPath.lineTo(62f, 53.08f)
                bezierPath.lineTo(45.04f, 34.6f)
                bezierPath.cubicTo(54.34f, 29.28f, 56.62f, 18.66f, 50.04f, 10.96f)
                bezierPath.cubicTo(46.14f, 6.41f, 39.79f, 3.7f, 33f, 3.7f)
                bezierPath.lineTo(14.05f, 3.71f)
                bezierPath.close()

                bezierPath.moveTo(25.51f, 13.08f)
                bezierPath.lineTo(32.99f, 13.08f)
                bezierPath.cubicTo(38.15f, 13.08f, 42.34f, 16.51f, 42.34f, 20.73f)
                bezierPath.cubicTo(42.34f, 24.96f, 38.15f, 28.39f, 32.99f, 28.39f)
                bezierPath.lineTo(25.51f, 28.39f)
                bezierPath.lineTo(25.51f, 13.08f)
                bezierPath.close()

                myPath = bezierPath

//                canvas.drawPath(bezierPath, paint)
            }

//            canvas.restore()
        }
    }
}